pipeline {

	agent none

	stages {
		stage('build') {
			when{
				changeset "**/vote/**"
			}
			agent {
				docker {
					image 'python:2.7.16-slim'
					args '-v $HOME/.m2:/root/.m2'
				}
			}
			steps{
				echo "Compiling vote app"
				dir('vote'){
					sh 'pip install -i requirements.txt'
				}
			}
		}
		stage('test') {
			when{
				changeset "**/vote/**"
			}
			agent {
				docker {
					image 'python:2.7.16-slim'
					args '-v $HOME/.m2:/root/.m2'
				}
			}
			steps{
				echo "Running Unit Tests on vote app"
				dir('vote'){
					sh 'nosetests -v'
				}
			}
		}
		stage('docker-package'){
			agent any
			when {
				branch 'master'
				changeset "**/vote/**"
			}
			steps{
				echo 'Packaging vote app with docker'
				script{
					docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
						def voteImage = docker.build("lbpaulino/vote:v${env.BUILD_ID}", "./vote")
						voteImage.push()
						voteImage.push("latest")
					}
				}
			}
		}
	}
	post{
		always{
			echo "Pipeline for vote is completed.."
		}
		failure{
			slackSend(channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
		}
		success{
			slackSend(channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
		}

	}
}
